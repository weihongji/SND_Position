@model MonitorPointModel
@{
    ViewBag.Title = Model.System.Name;
    Layout = "~/Views/Shared/_LayoutMonitorPoint.cshtml";

    var rootPath = Request.ApplicationPath;
    if (rootPath.EndsWith("/")) {
        rootPath = rootPath.Substring(0, rootPath.Length - 1);
    }
}

<style type="text/css">
    body {
        font-size: 62.5%;
    }

    #divSizeLink {
        padding: 10px 0px;
    }

    #divSizeLink > a {
        margin: 10px 20px;
    }

    /*Overview box*/
    #divOverview.collapse {
        height: 10px;
    }

        #divOverview.collapse #divMagnifier {
            visibility: hidden;
        }

    #divOverview.extend {
        height: 135px;
    }

        #divOverview.extend #divMagnifier {
            visibility: visible;
        }
</style>

<h2>@ViewBag.Title</h2>
<div id="divSizeLink">
    @Html.ActionLink("小图", "Show", new { id = Model.System.Id, size = MapSize.Small })
    @Html.ActionLink("中图", "Show", new { id = Model.System.Id, size = MapSize.Medim })
    @Html.ActionLink("大图", "Show", new { id = Model.System.Id, size = MapSize.Large })
</div>
<div style="border: 1px dashed silver; width: 768px; height: 576px; padding: 20px;">
    <div id="divFrame" style="position: relative; border: 1px solid blue; width: 0px; height: 0px; overflow: hidden;">
        <div id="divMap" style="display: inline-block; background: url(@(rootPath)/Images/@(Model.Map.Name));">
            <img src="~/Images/@(Model.Map.Name)" style="visibility: hidden;" />
            <div id="divPinLocated">
                @foreach (var pin in Model.MonitorList) {
                    <img id="pin_@(pin.Id)" title="@pin.ToString()"
                        pin_id="@pin.Id"
                        pin_name="@pin.Name"
                        pin_x="@pin.X"
                        pin_y="@pin.Y"
                        pin_type="@pin.MonitorContentId"
                        style="position: absolute; left: @(pin.Left)px; top: @(pin.Top)px;" src="~/Images/@(pin.Image)" />
                }
            </div>
        </div>
        <div id="divOverview" style="position: absolute; left: 0px; bottom: 0px; border: 1px solid black; display: inline-block; z-index: 1000;" class="extend">
            <div style="width: inherit; height: inherit; position: relative;">
                <div id="divCollapse" style="display: inline-block; position: absolute; width: 10px; border: 1px solid black; padding-left: 2px; color: black; font-size: 20px; line-height: 5px; cursor: pointer; z-index: 1001;">-</div>
                <div id="divMagnifier" style="display: none; position: absolute; border: 1px solid black; cursor: move;">
                    <img draggable="false" src="~/Images/Transparent.png" style="display: inline; width: inherit; height: inherit;" />
                </div>
                <img id="imgOverview" draggable="false" src="~/Images/@(Model.Map.Name)" style="display: inline; width: inherit; height: inherit;" />
            </div>
            <div id="divOverviewPins"></div>
        </div>
    </div>
</div>

<script type="text/javascript">
    // sizes
    var _map_width, _map_height;
    var _frame_width, _frame_height;
    var _overview_width, _overview_height;
    var _overview_border_width = 1;
    var _pin_pointerX = parseInt("@(Model.ContentList.Any() ? Model.ContentList[0].PointerX : 0)");
    var _pin_pointerY = parseInt("@(Model.ContentList.Any() ? Model.ContentList[0].PointerY : 0)");

    // flags
    var _isMapDraggable;

    $(window).bind("load", function () {
        _map_width = $("#divMap").width();
        _map_height = $("#divMap").height();
        var mapRatio = 1.0 * _map_width / _map_height;
        _frame_width = $("#divFrame").parent().width();
        _frame_height = $("#divFrame").parent().height();
        if (_frame_width < _frame_height * mapRatio) {
            _frame_height = parseInt(_frame_width / mapRatio);
        }
        else {
            _frame_width = parseInt(_frame_height * mapRatio);
        }
        $("#divFrame").width(_frame_width);
        $("#divFrame").height(_frame_height);
        _overview_height = $("#divOverview").height();
        _overview_width = _overview_height * mapRatio;
        $("#divOverview").width(_overview_width);
        $("#divCollapse").css("left", (_overview_width - 14).toString() + "px");
        $("#divMagnifier").width(_overview_width * _frame_width / _map_width);
        $("#divMagnifier").height(_overview_height * _frame_height / _map_height).css("display", "inline-block");

        _isMapDraggable = isDraggable();
        if (_isMapDraggable) {
            $("#divMap").css("cursor", (navigator.userAgent.toString().indexOf("WebKit") > 0 ? "-webkit-grab" : "move"));

            var offset = $("#divMap").offset();
            var x1 = (-1) * (_map_width - _frame_width) + offset.left; //-670;
            var x2 = offset.left; //50;
            var y1 = (-1) * (_map_height - _frame_height) + offset.top; //-370;
            var y2 = offset.top; //80;
            $("#divMap").draggable({
                containment: [x1, y1, x2, y2],
                drag: updateMagnifierPosition
            });

            $("#divMagnifier").draggable({
                containment: "parent",
                drag: updateMapPosition
            });
        }
        else {
            $("#divOverview").hide();
        }

        $("#divCollapse").click(function () {
            $("#divOverview").toggleClass("collapse extend");
            if ($("#divOverview").hasClass("extend")) {
                updateMagnifierPosition();
            }
        });

        updatePinsInOverview();
    });

    function updateMagnifierPosition() {
        if ($("#divOverview").hasClass("collapse")) {
            return;
        }
        var left = _overview_width * (-1) * parseInt($("#divMap").css("left")) / _map_width;
        $("#divMagnifier").css("left", left + "px");
        var top = _overview_height * (-1) * parseInt($("#divMap").css("top")) / _map_height;
        $("#divMagnifier").css("top", top + "px");
    }

    function updateMapPosition() {
        var left = _map_width * parseInt($("#divMagnifier").css("left")) / _overview_width * (-1);
        $("#divMap").css("left", left + "px");
        var top = _map_height * parseInt($("#divMagnifier").css("top")) / _overview_height * (-1);
        $("#divMap").css("top", top + "px");
    }

    function updatePinsInOverview() {
        var contentTypes = [
            @for (int i = 0; i < Model.ContentList.Count; i++) {
                var content = Model.ContentList[i];
                WriteLiteral(string.Format("{0}\"{1}\"", (i == 0 ? "" : ", "), content.Id));
            }
        ];
        var contentImages = [
            @for (int i = 0; i < Model.ContentList.Count; i++) {
                var content = Model.ContentList[i];
                WriteLiteral(string.Format("{0}\"{1}\"", (i == 0 ? "" : ", "), content.ImageOverview));
            }
        ];
        var wr = (_overview_width - _overview_border_width * 2) / _map_width; // ratio on width
        var hr = (_overview_height - _overview_border_width * 2) / _map_height; // ratio on height
        $("#divOverviewPins").html("");
        $("#divPinLocated>img").each(function () {
            var pin = $(this);
            var type = pin.attr("pin_type");
            var index = $.inArray(type, contentTypes);
            var overview = (index >= 0 ? contentImages[index] : "");
            var left = (parseInt(pin.css("left")) + _pin_pointerX) * wr;
            var top = (parseInt(pin.css("top")) + _pin_pointerY) * hr;
            $("#divOverviewPins").append("<img src='@(rootPath)/Images/" + overview + "' style='position: absolute; left: " + left + "px; top: " + top + "px;' />\n");
        });
    }

    function safeParseInt(value) {
        var result = parseInt(value);
        if (isNaN(result)) {
            result = 0;
        }
        return result;
    }

    function Point(x, y) {
        this.X = x;
        this.Y = y;
        this.toString = function () {
            return "(" + this.X + "," + this.Y + ")";
        }
    }

    function isDraggable() {
        return _map_width > _frame_width + 10 || _map_height > _frame_height + 10;
    }
</script>
